[ChattingSystem_Server.sin]

<HandlerClient.cs>
DoChat()
- MemoryStream을 이용하여, 수신 가능한 메시지의 범위를 늘림.
- 공백을 계속 출력하는 경우, 상대방의 소켓이 끊어짐으로 판단하여 연결을 해제함.
- 예외 발생 시, 로그에 에러를 출력하고, TcpSocket이 닫히지 않은 경우, ServerForm의 OnDisconnected로 이동하고, 다시 DoChat으로 돌아와 소켓을 끊고 쓰레드까지 제거하도록 한다.

<ServerForm.cs>

OnReceived()
- message 가공하는 부분을 없애고 정보를 DisplayText()와 SendMessageAll에 넘김.

OnDisconnected()
- ClientList에 있는 해당 Client정보를 삭제하고 ClientList에 정보가 있는 Client들 중 같은 채널에 있는 Client들에게 연결 해제 메시지를 전송

SendMessageAll()
- 서버로부터 오는 메시지를 확인하는 bool값을 매개변수로 추가.
- 서버에서 보낸 메시지는 보낼 각 TcpClient의 IpAddress를 이용하여 대칭키를 만들어서 message를 암호화한 다음, 각 Client에게 특수문자를 붙여서 송신.
- 서버가 아닌 경우, 그대로 같은 채널에 있는 Client들에게 보냄.

<ServerSecurity.cs>
EncryptedMessage()
- 암호화할 text와 key로 만들 문자를 매개변수로 받아서, AES 알고리즘의 종류인 Rijndael(레임달) 함수를 이용하여 블록화 암호화 기법일 이용합니다.
- key로 만들 문자는 Byte로 변환하고, 각 배열에 맞게끔 길이를 조절하고, 그 조절된 길이만큼 key에 사용할 byte를 잘라서 key와 IV를 생성.
- 암호화할 text를 바이트로 변환하고, 암호화하여 반환.

[ChattingSystem_Client.sin]

<ClientForm.cs>
GetMessage()
- 서버에게서 받은 첫 메시지를 복호화하여, Client의 IP와 Address를 가집니다.
- 서버에서 받은 메시지는 메시지 앞에 "Server > "를 붙여서 텍스트화면에 출력합니다.
- 클라이언트에게 받은 메시지는 서버의 IP, Port, Channel을 이용하여 만든 키를 이용하여 복호화 합니다.

btnSend_Click()
- 보낼 문자를 서버의 IP,Port,Channel을 이용하여 만든 키를 이용하여 암호화 합니다.
- message는 바이트로 변환하여 먼저 길이를 서버에 송신한 뒤에 문자열을 서버에 송신합니다.
- 문자

<SecurityClient.cs>
EncryptedMessage()
- 암호화 기능

DecryptedMessage()
- 복호화 기능



-----------------------------------
개선할 사항.
- ERROR LOG 
:  상대방 소켓이 끊어졌을 때, 임의로 메시지를 만들어 보냈는데, Client의 정보 기록하여서 누가 접속을 종료했는지 기록하도록 수정이 필요해보임.
